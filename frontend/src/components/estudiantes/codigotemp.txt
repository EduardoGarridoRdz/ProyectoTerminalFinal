-----------------------backend-----------------------------------------

class ExcelUploadViewSet(viewsets.ViewSet):
    parser_classes = [MultiPartParser]  # Asegúrate de que esto esté presente

    @action(detail=False, methods=['post'])
    def upload_excel(self, request):
        if 'file' not in request.FILES:
            return Response({'status': 'error', 'message': 'No file uploaded'}, status=400)
        
        excel_file = request.FILES['file']
        try:
            df = pd.read_excel(excel_file)
            # Procesar el archivo Excel
            return Response({'status': 'success', 'data': df.to_dict()})
        except Exception as e:
            return Response({'status': 'error', 'message': str(e)}, status=400)

-----------------------backend-----------------------------------------


-------------------------frontend--------------------------------------

// src/api/api.ts
import axios from 'axios';

const API_BASE_URL = 'http://127.0.0.1:8000/api'; // Cambia esto por la URL de tu API de Django


// Función para subir un archivo Excel
export const uploadExcelFile = async (file: File) => {
    const formData = new FormData();
    formData.append('file', file); // 'file' debe coincidir con el nombre esperado en el backend

    try {
        const response = await axios.post(`${API_BASE_URL}/subir_excel/upload_excel/`, formData);
        return response.data;
    } catch (error) {
        console.error('Error uploading file:', error);
        throw error;
    }
};

// Función para hacer una solicitud GET
export const fetchData = async (endpoint: string) => {
    try {
        const response = await axios.get(`${API_BASE_URL}/${endpoint}`);
        return response.data;
    } catch (error) {
        console.error('Error fetching data:', error);
        throw error;
    }
};

export const uploadExcelFile = async (endpoint: string, file: File) => {
    // Crear un objeto FormData
    const formData = new FormData();
    formData.append('file', file); // 'file' debe coincidir con el nombre esperado en el backend

    try {
        const response = await fetch(`http://localhost:8000/api/${endpoint}`, {
            method: "POST",
            body: formData, // Enviar el FormData en el cuerpo de la solicitud
            // No establezcas manualmente el encabezado 'Content-Type', fetch lo hace automáticamente
        });

        if (!response.ok) {
            throw new Error("Error al enviar el archivo");
        }

        return response.json(); // Procesar la respuesta JSON
    } catch (error) {
        console.error("Error uploading file:", error);
        throw error;
    }
};
// Función para hacer una solicitud POST
export const postData = async (endpoint: string, data: any) => {
    const response = await fetch(`http://localhost:8000/api/${endpoint}`, {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
    });

    if (!response.ok) {
        throw new Error("Error al enviar los datos");
    }

    return response.json();
};

-------------------------frontend--------------------------------------


-------------------------frontend componente ---------------------------
import React, { useState } from "react";
import { uploadExcelFile } from "../../API/api";
/*
const UploadExcel: React.FC = () => {
  const [file, setFile] = useState<File | null>(null);
  const [uploadStatus, setUploadStatus] = useState<string>("");

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (event.target.files && event.target.files[0]) {
      setFile(event.target.files[0]);
    }
  };

  const handleSubmit = async (event: React.FormEvent) => {
    event.preventDefault();
    if (!file) {
      alert("Por favor, selecciona un archivo.");
      return;
    }

    try {
      setUploadStatus("Subiendo archivo...");
      const response = await uploadExcelFile(file);
      setUploadStatus("Archivo subido con éxito: " + JSON.stringify(response));
    } catch (error) {
      setUploadStatus("Error al subir el archivo.");
      console.error(error);
    }
  };*/
const UploadExcel: React.FC = () => {
  const [file, setFile] = useState<File | null>(null);
  const [uploadStatus, setUploadStatus] = useState<string>("");

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (event.target.files && event.target.files[0]) {
      setFile(event.target.files[0]);
    }
  };

  const handleSubmit = async (event: React.FormEvent) => {
    event.preventDefault();
    if (!file) {
      alert("Por favor, selecciona un archivo.");
      return;
    }

    try {
      setUploadStatus("Subiendo archivo...");
      const response = await uploadExcelFile("subir_excel/upload_excel/", file); // Usa el endpoint correcto
      setUploadStatus("Archivo subido con éxito: " + JSON.stringify(response));
    } catch (error) {
      setUploadStatus("Error al subir el archivo.");
      console.error(error);
    }
  };

  return (
    <div>
      <h2>Subir archivo de Excel</h2>
      <form onSubmit={handleSubmit}>
        <input type="file" accept=".xlsx, .xls" onChange={handleFileChange} />
        <button type="submit">Subir</button>
      </form>
      {uploadStatus && <p>{uploadStatus}</p>}
    </div>
  );
};

export default UploadExcel;